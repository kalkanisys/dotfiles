#!/bin/sh
#
# dot
#
# `dot` handles installation, updates, things like that. Run it periodically
# to make sure you're on the latest and greatest.

set -e

parentDirectory="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)"
dotfilesDirectory="$(cd "$(dirname "$parentDirectory")" && pwd -P)"

displayUsageAndExit() {
	echo "dot -- dotfiles management"
	echo ""
	echo "Usage: dot [options]"
	echo ""
	echo "Options:"
	echo "  -e, --edit    Open dotfiles directory for editing"
	echo "  -h, --help    Show this help message and exit"
	exit
}

while test $# -gt 0; do
	case "$1" in
	"-h" | "--help")
		displayUsageAndExit
		;;
	"-e" | "--edit")
		exec "$EDITOR" "$dotfilesDirectory"
		exit
		;;
	*)
		echo "Invalid option: $1"
		displayUsageAndExit
		;;
	esac
	shift
done

export ZSHDOT=$HOME/.dotfiles

# Set macOS defaults
$ZSHDOT/macos/set-defaults.sh

# Install homebrew
$ZSHDOT/homebrew/install.sh 2>&1

# Upgrade homebrew
echo "› brew update"
brew update

# Find first matching file if exists then execute it.
if [[ -f "$ZSHDOT/.extras/dot.pre-install.sh" ]]; then
	echo "› $ZSHDOT/.extras/dot.pre-install.sh"
	$ZSHDOT/.extras/dot.pre-install.sh
fi

# Zsh pre block for dot install.
[[ -f "$ZSHDOT/.extras/dot.pre-install.sh" ]] && . "$ZSHDOT/.extras/dot.pre-install.sh"

# Install software
echo "› $ZSHDOT/script/install"
$ZSHDOT/script/install

# Zsh pre block for dot install.
[[ -f "$ZSHDOT/.extras/dot.post-install.sh" ]] && . "$ZSHDOT/.extras/dot.post-install.sh"
